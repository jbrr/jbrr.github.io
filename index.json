[{"content":"Andrew Bosworth recently wrote an interesting article about structure and process, and how those are important to high functioning organizations. It really resonates with me, I\u0026rsquo;ve seen first hand a lot of the repercussions of not taking process seriously enough, albeit on a much smaller level than he has. Anyway, I had a few questions, and a few additions, so I thought I\u0026rsquo;d throw it out into the void.\n There is a pernicious belief in our society that having a good idea is the hardest part of meaningful innovation.\n I completely agree. Ideas are cheap, execution is difficult and meaningful. That said, I\u0026rsquo;m not sure that there\u0026rsquo;s a \u0026ldquo;pernicious belief\u0026rdquo; in our society. Maybe I\u0026rsquo;m just naive, but I wouldn\u0026rsquo;t have thought this was a controversial stance. I also wonder if this is more prevalent in Silicon Valley, where people will throw absurd amounts of money at ideas and don\u0026rsquo;t even necessarily expect them to pan out.\n Teams are blocked until they can get questions answered and conflicts resolved. Reviews are our primary tool for solving these logjams at Meta.\n This rings very true for me. I can\u0026rsquo;t even begin to count the number of times when multiple people from multiple departments are all waiting on each other to get something resolved, hoping someone else will make a decision and get things moving again. It just doesn\u0026rsquo;t work unless someone takes initiative, and I never had a great idea of how to do that. I like the idea of review, although I think Boz (if I may be so bold) is using that term a little differently than I\u0026rsquo;m used to. To briefly stray, he mentions something really important in his article \u0026ldquo;On Reviews\u0026quot;:\n The final thing to know about reviews is that they are binding. If you get feedback in a review you don’t necessarily have to implement it but you must address it. Ignoring what you hear in a review isn’t an option.\n This is such an important organizational agreement to enforce. Otherwise, people will just continue spinning their wheels thinking that the blocker isn\u0026rsquo;t resolved yet, or that no meaningful action has been taken. I\u0026rsquo;ll touch on culture a little later, but I\u0026rsquo;m not sure how to enforce an agreement like that, and I suspect it may be most effective to do that from the top down.\n Teams of any meaningful scale of cross functional collaboration potentially face exponential overhead trying to align and make progress if they don’t have sufficient mutual knowledge. Even if you could establish global context at a point in time, information entropy sets in almost immediately.\n Once again, I love it. I believe this explains why M\u0026amp;A activity is so massively disruptive to employees. \u0026ldquo;Information entropy\u0026rdquo; happens so quickly, it\u0026rsquo;s hard to fight it fast enough to make positive ground when everybody\u0026rsquo;s busy working on their own legacy codebases. Not to mention, there\u0026rsquo;s often tension between employees, and that so that entropy is much more dangerous if folks are resistant to establishing mutual knowledge in the first place.\n Noise from miscommunication and overhead can overwhelm signal surprisingly quickly so it’s your responsibility to evaluate how your system contributes to and helps people process noise.\n I was working in tandem with a few teams in India on an important project at my last job, and I just couldn\u0026rsquo;t seem to escape this. Our days only overlapped by a few hours, and even those few hours were uncomfortably early or late for everyone involved. My team and I invested several weeks into a project, with input from my manager and director, only to eventually find out that a team in India was working on the exact same thing. With a language, cultural, and time gap, I\u0026rsquo;m not totally sure that can really be overcome. This goes back to the discussion on reviews as well. We didn\u0026rsquo;t have an organizational agreement that reviews were binding, and that was just made all the more frustrating when there\u0026rsquo;s a 12 hour gap around every single miscommunication and every single pushback against some review.\n Each program should have a very comprehensive set of groups covering a range of audiences: a global group open to anyone interested in a project, a cross functional group including the entire breadth of people working on it (could be open or closed depending on the level of confidential information being shared), a closed team group dedicated to each discipline, and closed working groups for any ad hoc issues that come up.\n It seems like this is kind of how people naturally organize in the first place (or, I could just be misunderstanding the term \u0026ldquo;group\u0026rdquo; because I\u0026rsquo;ve never used workplace). But I don\u0026rsquo;t think it\u0026rsquo;s at all unusually for someone to either give a brown bag lunch talk or record a video going over the high level view of what their team has ben working on, and the more detailed you get, the fewer the number of interested parties you\u0026rsquo;ll have around. Or, another example, someone will write up an article on Confluence about some big new widget they\u0026rsquo;re building for consumption by the whole organization, and maybe some stakeholders in a business role will attend comment on Jira tickets or will be in Slack channels, but when you get down to daily stand-ups - it\u0026rsquo;s just the team responsible for building the widget talking about the issues they\u0026rsquo;re running into.\n Finally, stable documents people can refer back to are valuable as reference points and for onboarding new people. Things like roadmaps, OKRs, as well as mission and vision statements should be pinned or posted and easily accessible. The process of generating these artifacts is another important one that should be done on an infrequent basis but at greater depth to allow people to ask more profound questions that may not present themselves day to day.\n In theory, I totally agree, but I\u0026rsquo;m very curious about how Meta makes sure these things don\u0026rsquo;t just get redone over and over, or just lost in the wind. Maybe Boz is thinking of higher level artifacts than I am, but it can be difficult to try to create these artifacts around operations when it seems like they\u0026rsquo;re never consumed or referenced by anyone. Not by any ill intent on anyone\u0026rsquo;s part, but wikis or Slack channels get crowded and increasingly disorganized with use. These things just get lost, just like documentation, and I\u0026rsquo;m still trying to figure out a good solution to that.\n Being blocked needs to be seen as a worse outcome than being wrong; it is the most useless of all failure modes.\n I hadn\u0026rsquo;t thought about this before, but I completely agree. How employees look at being blocked is generally a great indication of the overall company culture.\n We can shape culture through what we choose to celebrate and what we publicly discourage.\n I think it\u0026rsquo;s important to mention here that culture is just as much shaped by what we don\u0026rsquo;t choose to celebrate, and what we don\u0026rsquo;t choose to publicly encourage. It\u0026rsquo;s very easy to get worn down when it seems like the person loudly asking questions at all hands every week is getting promoted, while the person managing to balance ad hoc requests from colleagues and their assigned work just get ignored. Speaking of pernicious beliefs, I think engineers in general put way too much importance on being the loud, opinionated one. Calling something a bad idea is a way to raise your status in the engineering world. But now I\u0026rsquo;m way offtopic.\nAnyway, overall, I really enjoyed this article. I think having this kind of an operational mindset is vastly underrated around engineers, and the vast majority of organizational issues I\u0026rsquo;ve seen have come from someone not having that kind of a mindset. Anyway, thanks for the good read, Boz!\n","permalink":"https://jbrr.dev/posts/2021-12-24-a-reaction-to-andrew-bosworth/","summary":"Andrew Bosworth recently wrote an interesting article about structure and process, and how those are important to high functioning organizations. It really resonates with me, I\u0026rsquo;ve seen first hand a lot of the repercussions of not taking process seriously enough, albeit on a much smaller level than he has. Anyway, I had a few questions, and a few additions, so I thought I\u0026rsquo;d throw it out into the void.\n There is a pernicious belief in our society that having a good idea is the hardest part of meaningful innovation.","title":"Thoughts on \"Operations\" by Andrew Bosworth"},{"content":"After almost 5 years at Tendril / Uplight, I\u0026rsquo;ve finally moved on and just started a new job at Tackle as a Senior Software Engineer on a team working on data ingest. It\u0026rsquo;s a super exciting time to be joining Tackle, as they just secured Series C funding.\nI didn\u0026rsquo;t leave Uplight on the best of terms, which is potentially a story for another time. Suffice to say, everyone there was beyond helpful and supportive, and I feel terrible about the way I left things. I\u0026rsquo;m so grateful that they took a chance on me in the first place, as a junior developer fresh out of code school, as well as the opportunity to advance from a junior engineer to a senior engineer and tech lead of a small team. I learned just an unbelievable amount there. There are some amazing folks working there, their mission is wonderful, and I truly wish the company and employees all the best.\nIt\u0026rsquo;s been a long time since I started a new job, and the transition from being \u0026ldquo;the person who can dive into any legacy project and fix it\u0026rdquo; to being \u0026ldquo;the person who has absolutely no idea what you\u0026rsquo;re talking about\u0026rdquo; has been a little rougher than I anticipated. Needless to say, impostor syndrome is back with a vengeance as well. Not that it ever went away, but I was comfortable enough to keep it at bay most of the time. That said, I\u0026rsquo;m trying to embrace having fresh eyes, and questioning things that folks take for granted.\nTackle is growing at an astronomical rate, going from ~50 employees to ~150 just this year, and planning to double again in 2022. That said, it still feels like a very early stage startup. There\u0026rsquo;s a lot of work to do, which is not at all a jab at the folks who built it. They built what they needed to, and there\u0026rsquo;s no sense in building software that will scale to millions of requests per hour if you\u0026rsquo;re only dealing with hundreds, especially when there are so many moving parts involved. Patterns and architecture ought to evolve as the company does, so time spent optimizing some service that very well might not even be in use in 2 years doesn\u0026rsquo;t seem like time well spent. All that said, there are a few key areas that I\u0026rsquo;ve been thinking about that will need to be improved soon.\nTightening up loose access control New engineers have access to basically everything on day 1, violating the principle of least privilege. Creating and enforcing access controls is a bit outside of my wheelhouse, but it\u0026rsquo;ll probably be a pretty big cultural shift for the engineering team, so getting started early and rolling it out incrementally seems wise.\nBetter transactional database monitoring The company has few enough data so far that a single RDS Postgres instance is pretty reliably serving the as the data ingest destination and the API source for everything. This will be unsustainable longer term, and I haven\u0026rsquo;t seen any sort of health monitoring around it. One red flag is that the maximum used transaction IDs haven\u0026rsquo;t dropped for as far back as CloudWatch metrics go. It\u0026rsquo;s nowhere near transaction ID wraparound, but that would be catastrophic, so at the very least, getting monitoring and alerting up is important. Longer term, the DB probably needs to be able to scale horizontally, or we should better utilize the existing data lake.\nData ingest observability This is a big, exciting topic, and one that I hope to write a lot more about in the future. As a baseline, Barr Moses wrote a great introduction to the topic. The starting point here is freshness. Currently, ingests are all scheduled via cron, and each client\u0026rsquo;s raw data endpoint is attempted regardless of whether or not we actually expect data to be present. This makes it really hard to know if there was some failure to fetch some client\u0026rsquo;s data, or if no data was actually expected in the first place. There are too many clients to manually set an expected ingest cadence, so freshness metrics will have to rely on either rudimentary statistics from the DB, or machine learning. The goal is to get away from the current state of being surprised that some client\u0026rsquo;s data hasn\u0026rsquo;t been ingested in months, and instead have some easy to understand metrics that can be exposed to customer success folks. There\u0026rsquo;s a lot more to say about this, but I\u0026rsquo;ll save that for later.\nSignal to noise ratio of alerts This is a common issue, but one that needs to be addressed at some point. I\u0026rsquo;ve been at this job for a week, and I\u0026rsquo;m already getting alert fatigue and ignoring alerts. At some point, useless alerts need to be destroyed, and important ones need to be elevated. This kind of thing will have to be a team effort involving subject matter experts from the source of each alert.\nOverall, these are fun and interesting problems to have. I don\u0026rsquo;t think any of them are unusual for such a young startup, and I\u0026rsquo;m super excited to start getting my hands dirty. I\u0026rsquo;m going to try to keep this updated and write about some of these topics more in depth as they come up. Hopefully someone, somewhere will find it helpful!\n","permalink":"https://jbrr.dev/posts/2021-12-23-new-beginnings/","summary":"After almost 5 years at Tendril / Uplight, I\u0026rsquo;ve finally moved on and just started a new job at Tackle as a Senior Software Engineer on a team working on data ingest. It\u0026rsquo;s a super exciting time to be joining Tackle, as they just secured Series C funding.\nI didn\u0026rsquo;t leave Uplight on the best of terms, which is potentially a story for another time. Suffice to say, everyone there was beyond helpful and supportive, and I feel terrible about the way I left things.","title":"New beginnings"},{"content":"2020 was awful in a loud, bombastic way that (almost) everyone could agree on. There was a certain comfort in the idea that as terrible as it was, we were all in it together. 2021 has been awful in a much more insidious, isolated way, where everyone seems to feel like they\u0026rsquo;re suffering alone.\nI\u0026rsquo;ve had a shit year. Like a really, truly, awful year. The isolation of last year set the stage for all sorts of warning signs of mental illness going unnoticed. These things tend to have a domino effect as well, as one person\u0026rsquo;s mental health effects everyone around them. I haven\u0026rsquo;t just seen this in folks I know personally, but just think about the rise of QAnon, or videos of folks toppling displays at Target because they don\u0026rsquo;t want to wear a mask. It\u0026rsquo;s easy to laugh at this stuff, but it seems very likely to me that most of these folks are in crisis. They need empathy and help, not ridicule.\nI\u0026rsquo;m not sure what to do about any of this besides encourage folks to watch for warning signs. Depending on the illness, the earlier it\u0026rsquo;s recognized, the less destructive it\u0026rsquo;ll end up being. Changes in personality shouldn\u0026rsquo;t be overlooked, nor should changes in mood, appetite, or sleep. Please, visit nami.org and find help in your area if you\u0026rsquo;re experiencing any of these warning signs, or if someone you love is. It might be a little bit scary to reach out to someone, but I promise it\u0026rsquo;s not nearly as scary as leaving it untreated.\n","permalink":"https://jbrr.dev/posts/2021-11-04-2021-the-year-that-was-inexplicably-worse-than-the-last/","summary":"2020 was awful in a loud, bombastic way that (almost) everyone could agree on. There was a certain comfort in the idea that as terrible as it was, we were all in it together. 2021 has been awful in a much more insidious, isolated way, where everyone seems to feel like they\u0026rsquo;re suffering alone.\nI\u0026rsquo;ve had a shit year. Like a really, truly, awful year. The isolation of last year set the stage for all sorts of warning signs of mental illness going unnoticed.","title":"2021: The year that was inexplicably worse than the last"},{"content":"Hi, I\u0026rsquo;m Jeff, and you need more Jeff\u0026rsquo;s in your life. Currently living in Denver, Colo. with my lovely wife and working as a senior software engineer at Tackle. I like thinking about data, effective teams, mental health, and empathy. When I was younger, I journaled every day, and I\u0026rsquo;d like to get back into the habit. So here I am, writing a blog that nobody will ever read!\nBranding: twitter\nlinkedin\ngithub\nemail\n","permalink":"https://jbrr.dev/about/","summary":"about","title":"About"}]